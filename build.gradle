import javax.security.auth.login.Configuration

buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath 'org.asciidoctor:asciidoctor-gradle-jvm:3.1.0'
        classpath 'org.asciidoctor:asciidoctor-gradle-jvm-pdf:3.1.0'
        classpath 'org.asciidoctor:asciidoctor-gradle-jvm-epub:3.1.0'
        classpath 'org.ajoberstar:gradle-git:1.7.2'
        classpath "org.grails.plugins:hibernate5:${gormHibernateVersion-".RELEASE"}"
        classpath "de.undercouch:gradle-download-task:4.1.2"
    }
}

version project.projectVersion
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.internal.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "de.undercouch.download"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

jar {
    exclude "test/**"
    exclude "test/**/**"
}

groovydoc {
    exclude "test/**"
    exclude "test/**/**"
}

sourcesJar {
    exclude "test/**"
    exclude "test/**/**"
    archiveClassifier.set('sources')
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"

    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    compile "org.grails:grails-core"
    compile "org.grails.plugins:hibernate5"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    // elastic search dependencies
    implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    // new Java API client
    implementation 'co.elastic.clients:elasticsearch-java:7.16.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

    implementation 'org.apache.httpcomponents:httpasyncclient:4.1.4'
    implementation 'org.apache.httpcomponents:httpcore-nio:4.4.14'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpcore:4.4.14'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'jakarta.json:jakarta.json-api:1.1.6'
    implementation 'jakarta.platform:jakarta.jakartaee-web-api:9.1.0'

    // @TODO in one moment please get RID of these 2 deprecated dependencies
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: elasticsearchVersion
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: elasticsearchVersion

    compile group: 'org.locationtech.spatial4j', name: 'spatial4j', version: '0.8'

    console "org.grails:grails-console"

    profile "org.grails.profiles:web-plugin"

//    /implementation 'com.spatial4j:spatial4j:0.5'
    //implementation 'org.apache.tomcat:tomcat-jdbc'

    //implementation "org.grails:grails-gorm-testing-support"
    //implementation "org.grails:grails-web-testing-support"

    //implementation 'com.vividsolutions:jts:1.13'
    //implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // get rid of log4j 2.14.1
    implementation "org.apache.logging.log4j:log4j-api:2.17.1"
    implementation "org.apache.logging.log4j:log4j-core:2.17.1"
    implementation "org.apache.logging.log4j:log4j-to-slf4j:2.17.1"

    compile fileTree(dir: "libs/elasticsearch", include: '*.jar')
}

task cleanLibsDir(type: Delete) {
    delete fileTree(dir: 'libs')
}

check.finalizedBy("cleanDataDir")
clean.finalizedBy("cleanDataDir", "cleanLibsDir")

task cleanDataDir(type: Delete) {
    delete fileTree(dir: 'data')
}

tasks.withType(Test) {
    afterTest { desc, result ->
        logger.quiet " -- Executed test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    testLogging {
        events "passed", "skipped", "failed"//, "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    sourceResources sourceSets.main
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

apply from: "gradle/documentation.gradle"

apply from: "gradle/publish.gradle"

grailsPublish {
    githubSlug = 'grails-plugins/elasticsearch-grails-plugin'
    license {
        name = 'Apache-2.0'
    }
    title = "Elasticsearch Grails Plugin"
    //rep = "grails-plugins"
    desc = "An Elasticsearch plugin for Grails"
    developers = [
            noam: 'Noam Y. Tenne',
            macrcos: 'Marcos Carceles',
            puneet: 'Puneet Behl',
            james: 'James Kleeh',
            cgoit: 'Carsten GÃ¶tzinger'
    ]
}

configurations.all {
    resolutionStrategy {
        force 'org.apache.logging.log4j:log4j-api:2.17.1'
        force 'org.apache.logging.log4j:log4j-core:2.17.1'
        force 'org.apache.logging.log4j:log4j-to-slf4j:2.17.1'
    }
}

task resolveDependencies {
    doLast {
        rootProject.allprojects { project ->
            Set<Configuration> configurations = project.buildscript.configurations + project.configurations
            configurations.findAll { d -> d.canBeResolved }
                    .forEach { d-> d.resolve() }
        }
    }
}

